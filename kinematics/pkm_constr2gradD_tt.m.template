% Ableitung der Translationskomponente der kinematischen ZB nach der
% EE-Position und Ableitung dieser (Gradienten-)Matrix nach der Zeit
% 
% Ausgabe:
% PhiD_x_red
%   Reduzierte Zeilen: Die Reduktion folgt aus der Klassenvariablen I_EE
% PhiD_x [3xN]
%   Ableitung der Translations-ZB nach der EE-Position und der Zeit. Ergebnis ist
%   Null-Matrix, da die EE-Position linear in den Positionsfehler eingeht

% Diese Datei ist identisch mit: ParRob/constr2gradD_tt.m
% Generierung einer kompilierbaren Matlab-Funktion aus Vorlage.


% Moritz Schappler, moritz.schappler@imes.uni-hannover.de, 2018-10
% (C) Institut für Mechatronische Systeme, Universität Hannover

function [PhiD_x_red, PhiD_x] = %PN%_constr2gradD_tt(s)


%% Coder Information
%#codegen
%$cgargs {struct(
%$cgargs  'I_constr_t_red', coder.newtype('double',[1,inf]),
%$cgargs   'Leg_I_EE_Task', true(%NLEG%,6))}
%% Initialisierung
NLEG = %NLEG%;
I_EE = %I_EE%;

PhiD_x = zeros(3*NLEG,3);
PhiD_x_red = zeros(length(s.I_constr_t_red), sum(I_EE(1:3)));

%% Belegung der Ausgabevariablen
for i = 1:NLEG
  I1 = 3*(i-1)+1;
  % Term in constr2grad_tt ist Einheitsmatrix -> Zeitableitung ist Null
  phi = zeros(3);
  PhiD_x(I1:I1+2,:) = phi;
  
  J1 = sum(s.Leg_I_EE_Task(i,1:3))*(i-1)+1; % TODO: Anpassung an unterschiedliche Beine
  PhiD_x_red(J1:J1+sum(I_EE(1:3))-1,:) = phi(s.Leg_I_EE_Task(i,1:3), I_EE(1:3));
end
